<?php
// Задание 5. Результат 1234. Доступ к статическому свойству осуществляется через функцию и
// статическая $x доступна любому экземляру своего класса


class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo(); // 1
$a2->foo(); // 2
$a1->foo(); // 3
$a2->foo(); // 4


// Задание 6. Результат 1122. Статическая $x доступна любому экземляру своего класса,
// здесь же идёт речь о классе наследнике. Получилось, что классы A и B имеют каждый своё статичное свойство,
// которое меняется через функцию экземляром своего класса.

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo(); // 1
$b1->foo(); // 1
$a1->foo(); // 2
$b1->foo(); // 2



// Задание 7. Код почти не отличается от задания 6. Скобки конструктора при создании экземпляра класса не влияют на результат.

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A;
$b1 = new B;
$a1->foo(); // 1
$b1->foo(); // 1
$a1->foo(); // 2
$b1->foo(); // 2
